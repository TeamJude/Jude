/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _appRouteImport } from './routes/__app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as _appKnowledgeIndexRouteImport } from './routes/__app/knowledge/index'
import { Route as _appDashboardIndexRouteImport } from './routes/__app/dashboard/index'
import { Route as _appClaimsIndexRouteImport } from './routes/__app/claims/index'
import { Route as _appClaimsIdIndexRouteImport } from './routes/__app/claims/$id/index'

const _appRoute = _appRouteImport.update({
  id: '/__app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _appKnowledgeIndexRoute = _appKnowledgeIndexRouteImport.update({
  id: '/knowledge/',
  path: '/knowledge/',
  getParentRoute: () => _appRoute,
} as any)
const _appDashboardIndexRoute = _appDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => _appRoute,
} as any)
const _appClaimsIndexRoute = _appClaimsIndexRouteImport.update({
  id: '/claims/',
  path: '/claims/',
  getParentRoute: () => _appRoute,
} as any)
const _appClaimsIdIndexRoute = _appClaimsIdIndexRouteImport.update({
  id: '/claims/$id/',
  path: '/claims/$id/',
  getParentRoute: () => _appRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/claims': typeof _appClaimsIndexRoute
  '/dashboard': typeof _appDashboardIndexRoute
  '/knowledge': typeof _appKnowledgeIndexRoute
  '/claims/$id': typeof _appClaimsIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/claims': typeof _appClaimsIndexRoute
  '/dashboard': typeof _appDashboardIndexRoute
  '/knowledge': typeof _appKnowledgeIndexRoute
  '/claims/$id': typeof _appClaimsIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__app': typeof _appRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/__app/claims/': typeof _appClaimsIndexRoute
  '/__app/dashboard/': typeof _appDashboardIndexRoute
  '/__app/knowledge/': typeof _appKnowledgeIndexRoute
  '/__app/claims/$id/': typeof _appClaimsIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/claims'
    | '/dashboard'
    | '/knowledge'
    | '/claims/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/claims'
    | '/dashboard'
    | '/knowledge'
    | '/claims/$id'
  id:
    | '__root__'
    | '/'
    | '/__app'
    | '/auth/login'
    | '/__app/claims/'
    | '/__app/dashboard/'
    | '/__app/knowledge/'
    | '/__app/claims/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _appRoute: typeof _appRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__app': {
      id: '/__app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app/knowledge/': {
      id: '/__app/knowledge/'
      path: '/knowledge'
      fullPath: '/knowledge'
      preLoaderRoute: typeof _appKnowledgeIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/dashboard/': {
      id: '/__app/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _appDashboardIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/claims/': {
      id: '/__app/claims/'
      path: '/claims'
      fullPath: '/claims'
      preLoaderRoute: typeof _appClaimsIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/claims/$id/': {
      id: '/__app/claims/$id/'
      path: '/claims/$id'
      fullPath: '/claims/$id'
      preLoaderRoute: typeof _appClaimsIdIndexRouteImport
      parentRoute: typeof _appRoute
    }
  }
}

interface _appRouteChildren {
  _appClaimsIndexRoute: typeof _appClaimsIndexRoute
  _appDashboardIndexRoute: typeof _appDashboardIndexRoute
  _appKnowledgeIndexRoute: typeof _appKnowledgeIndexRoute
  _appClaimsIdIndexRoute: typeof _appClaimsIdIndexRoute
}

const _appRouteChildren: _appRouteChildren = {
  _appClaimsIndexRoute: _appClaimsIndexRoute,
  _appDashboardIndexRoute: _appDashboardIndexRoute,
  _appKnowledgeIndexRoute: _appKnowledgeIndexRoute,
  _appClaimsIdIndexRoute: _appClaimsIdIndexRoute,
}

const _appRouteWithChildren = _appRoute._addFileChildren(_appRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _appRoute: _appRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
