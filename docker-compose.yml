services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT
      - CIMAS_ACCOUNT_NAME
      - CIMAS_ACCOUNT_PASSWORD
      - CIMAS_CLAIMS_SWITCH_ENDPOINT
      - CIMAS_PRACTICE_NUMBER
      - CIMAS_PRICING_API_ENDPOINT
      - CIMAS_PRICING_API_USERNAME
      - CIMAS_PRICING_API_PASSWORD
      - DATABASE_URL
      - CLIENT_URL
      - JWT_SECRET_KEY
      - JWT_ISSUER
      - JWT_AUDIENCE
      - VITE_SERVER_URL
      - AZURE_AI_APIKEY
      - AZURE_AI_ENDPOINT
      - VECTOR_DB_URL
      - CUSTOM_AZURE_AI_APIKEY
      - CUSTOM_AZURE_AI_ENDPOINT
      - AZURE_AI_SEARCH_APIKEY
      - AZURE_AI_SEARCH_ENDPOINT
      - AZURE_BLOB_ACCOUNT
      - AZURE_BLOB_ACESS_KEY
      - AZURE_BLOB_CONTAINER
      - AZURE_BLOB_CONNECTION_STRING
      - AZURE_BLOB_URL
      - POLICY_INDEX_NAME
      - OPEN_AI_APIKEY
    networks:
      - jude-network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: jude-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - jude-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  jude-network:
    driver: bridge

volumes:
  postgres-data:
